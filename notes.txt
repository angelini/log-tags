> load('log, "apache.log")

path = ~/src/log-tags/apache.log
mtime = Nov 22 21:33

> tag('log, 'level, r"\[(error|notice)\]")

> take('log, 2)

0: [Sun Dec 04 04:47:44 2005] [notice] workerEnv.init() ok /etc/httpd/conf/workers2.properties
   => level: notice

1: [Sun Dec 04 04:47:44 2005] [error] mod_jk child workerEnv in error state 6
   => level: error

> tag(log, 'date, r"\[(\S+ \S+ \d+ \d+:\d+:\d+ \d+)\]", """
months = {}
months["Dec"] = 12

function parse_date (d)
  return string.sub(chunk, 9, 10) .. "-" .. months[string.sub(chunk, 5, 7)] .. "-" .. string.sub(chunk, 21, 24)
end
""", "parse_date(d)")

> take(log, 2)

0: [Sun Dec 04 04:47:44 2005] [notice] workerEnv.init() ok /etc/httpd/conf/workers2.properties
   => level: notice
      date:  04-12-2005

1: [Sun Dec 04 04:47:44 2005] [error] mod_jk child workerEnv in error state 6
   => level: error
      date:  04-12-2005

> count(log, 'level)

notice: 34
error:  12

> filter(log, 'level = "error")

0: [Sun Dec 04 04:47:44 2005] [error] mod_jk child workerEnv in error state 6
   => level: error
      date:  04-12-2005

1: [Sun Dec 04 04:51:18 2005] [error] mod_jk child workerEnv in error state 6
   => level: error
      date:  04-12-2005

> count(filter(log, 'level = "error"), 'date)

04-12-2005: 12

> group(log, 'level)

error:

  0: [Sun Dec 04 04:47:44 2005] [error] mod_jk child workerEnv in error state 6
     => level: error
        date:  04-12-2005

  1: [Sun Dec 04 04:51:18 2005] [error] mod_jk child workerEnv in error state 6
     => level: error
        date:  04-12-2005

notice:
  0: [Sun Dec 04 04:47:44 2005] [notice] workerEnv.init() ok /etc/httpd/conf/workers2.properties
     => level: notice
        date:  04-12-2005


/////////////////////////////////////////////////////////////////////////////////////////////////

> load('log, "example.txt")

> count('log)
> count_distinct('log, 'level)

> tag('log, 'date)
| regex(r"\[(\S+ \S+ \d+ \d+:\d+:\d+ \d+)\]")

> tag('log, 'level)
| regex(r"\[(error|notice)\]")

> distinct('log, 'level)
> count(distinct('log, 'level))

> 'log
| tail(10)
| distinct('level)
| count
| keep('distinct_levels)

> tag('log, 'date)
| regex(r"\[(\S+ \S+ \d+ \d+:\d+:\d+ \d+)\]")
| setup("""
months = {}
months["Dec"] = 12

function parse_date (d)
  return string.sub(chunk, 9, 10) .. "-" .. months[string.sub(chunk, 5, 7)] .. "-" .. string.sub(chunk, 21, 24)
end
""")
| transform("parse_date(data)")

/////////////////////////////////////////////////////////////////////////////////////////////////

> load('log, "apache.log")
|

> tag('log, 'level)
| regex("\[(error|notice)\]")
|

> filter('level, ==, "error")
| take(5)
|

> filter('log-error, 'level, ==, "error")
|

> take('log-error, 5)
|

> tag('log, 'other)
| filter(==, "10")
| take(5)
|

> tag('log, 'other)
| filter('other-10, ==, "10)
|

> take('other-10, 5)
|

/////////////////////////////////////////////////////////////////////////////////////////////////

Cache A: [0, 15]
      B: [0, 0]
      C: [4, 12]

Take(A, 5): [0, 5]
MissingBefore: [0, 0]
MissingAfter:  [15, 15]

Take(C, 5): [0, 5]
Missing Before: [0, 4]
Missing After:  [12, 12]

Take(B, 1): [0, 1]
MissingBefore: [0, 0]
MissingAfter:  [0, 1]

Take(C, 15): [0, 15]
MissingBefore: [0, 4]
MissingAfter:  [12, 15]

Take(A, 20): [0, 20]
MissingBefore: [0, 0]
MissingAfter:  [15, 20]
